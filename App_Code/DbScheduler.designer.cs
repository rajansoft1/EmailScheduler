#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EmailScheduler")]
public partial class DbSchedulerDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertContactGroup(ContactGroup instance);
  partial void UpdateContactGroup(ContactGroup instance);
  partial void DeleteContactGroup(ContactGroup instance);
  partial void InsertContactGroupSheetMaping(ContactGroupSheetMaping instance);
  partial void UpdateContactGroupSheetMaping(ContactGroupSheetMaping instance);
  partial void DeleteContactGroupSheetMaping(ContactGroupSheetMaping instance);
  partial void InsertEmailSchedule(EmailSchedule instance);
  partial void UpdateEmailSchedule(EmailSchedule instance);
  partial void DeleteEmailSchedule(EmailSchedule instance);
  partial void InsertEmailTemplate(EmailTemplate instance);
  partial void UpdateEmailTemplate(EmailTemplate instance);
  partial void DeleteEmailTemplate(EmailTemplate instance);
  partial void InsertOwner(Owner instance);
  partial void UpdateOwner(Owner instance);
  partial void DeleteOwner(Owner instance);
  partial void InsertRecursiveSheet(RecursiveSheet instance);
  partial void UpdateRecursiveSheet(RecursiveSheet instance);
  partial void DeleteRecursiveSheet(RecursiveSheet instance);
  partial void InsertRecursiveSmsTemplate(RecursiveSmsTemplate instance);
  partial void UpdateRecursiveSmsTemplate(RecursiveSmsTemplate instance);
  partial void DeleteRecursiveSmsTemplate(RecursiveSmsTemplate instance);
  partial void InsertSheet(Sheet instance);
  partial void UpdateSheet(Sheet instance);
  partial void DeleteSheet(Sheet instance);
  partial void InsertSmsConnection(SmsConnection instance);
  partial void UpdateSmsConnection(SmsConnection instance);
  partial void DeleteSmsConnection(SmsConnection instance);
  partial void InsertSmtpConnection(SmtpConnection instance);
  partial void UpdateSmtpConnection(SmtpConnection instance);
  partial void DeleteSmtpConnection(SmtpConnection instance);
  partial void InsertContact(Contact instance);
  partial void UpdateContact(Contact instance);
  partial void DeleteContact(Contact instance);
  partial void InsertSmsTemplate(SmsTemplate instance);
  partial void UpdateSmsTemplate(SmsTemplate instance);
  partial void DeleteSmsTemplate(SmsTemplate instance);
  partial void InsertSmsSchedule(SmsSchedule instance);
  partial void UpdateSmsSchedule(SmsSchedule instance);
  partial void DeleteSmsSchedule(SmsSchedule instance);
  partial void InsertEmailSchedule1(EmailSchedule1 instance);
  partial void UpdateEmailSchedule1(EmailSchedule1 instance);
  partial void DeleteEmailSchedule1(EmailSchedule1 instance);
  partial void InsertRecursiveEmailTemplate(RecursiveEmailTemplate instance);
  partial void UpdateRecursiveEmailTemplate(RecursiveEmailTemplate instance);
  partial void DeleteRecursiveEmailTemplate(RecursiveEmailTemplate instance);
  partial void InsertRecursiveContactGroupSheetMaping(RecursiveContactGroupSheetMaping instance);
  partial void UpdateRecursiveContactGroupSheetMaping(RecursiveContactGroupSheetMaping instance);
  partial void DeleteRecursiveContactGroupSheetMaping(RecursiveContactGroupSheetMaping instance);
  partial void InsertEmailLog(EmailLog instance);
  partial void UpdateEmailLog(EmailLog instance);
  partial void DeleteEmailLog(EmailLog instance);
  partial void InsertSmsLog(SmsLog instance);
  partial void UpdateSmsLog(SmsLog instance);
  partial void DeleteSmsLog(SmsLog instance);
  partial void InsertContactSync(ContactSync instance);
  partial void UpdateContactSync(ContactSync instance);
  partial void DeleteContactSync(ContactSync instance);
  #endregion
	
	public DbSchedulerDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EmailSchedulerConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DbSchedulerDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbSchedulerDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbSchedulerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DbSchedulerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ContactGroup> ContactGroups
	{
		get
		{
			return this.GetTable<ContactGroup>();
		}
	}
	
	public System.Data.Linq.Table<ContactGroupSheetMaping> ContactGroupSheetMapings
	{
		get
		{
			return this.GetTable<ContactGroupSheetMaping>();
		}
	}
	
	public System.Data.Linq.Table<EmailSchedule> EmailSchedules
	{
		get
		{
			return this.GetTable<EmailSchedule>();
		}
	}
	
	public System.Data.Linq.Table<EmailTemplate> EmailTemplates
	{
		get
		{
			return this.GetTable<EmailTemplate>();
		}
	}
	
	public System.Data.Linq.Table<Owner> Owners
	{
		get
		{
			return this.GetTable<Owner>();
		}
	}
	
	public System.Data.Linq.Table<RecursiveSheet> RecursiveSheets
	{
		get
		{
			return this.GetTable<RecursiveSheet>();
		}
	}
	
	public System.Data.Linq.Table<RecursiveSmsTemplate> RecursiveSmsTemplates
	{
		get
		{
			return this.GetTable<RecursiveSmsTemplate>();
		}
	}
	
	public System.Data.Linq.Table<Sheet> Sheets
	{
		get
		{
			return this.GetTable<Sheet>();
		}
	}
	
	public System.Data.Linq.Table<SmsConnection> SmsConnections
	{
		get
		{
			return this.GetTable<SmsConnection>();
		}
	}
	
	public System.Data.Linq.Table<SmtpConnection> SmtpConnections
	{
		get
		{
			return this.GetTable<SmtpConnection>();
		}
	}
	
	public System.Data.Linq.Table<Contact> Contacts
	{
		get
		{
			return this.GetTable<Contact>();
		}
	}
	
	public System.Data.Linq.Table<SmsTemplate> SmsTemplates
	{
		get
		{
			return this.GetTable<SmsTemplate>();
		}
	}
	
	public System.Data.Linq.Table<SmsSchedule> SmsSchedules
	{
		get
		{
			return this.GetTable<SmsSchedule>();
		}
	}
	
	public System.Data.Linq.Table<EmailSchedule1> EmailSchedule1s
	{
		get
		{
			return this.GetTable<EmailSchedule1>();
		}
	}
	
	public System.Data.Linq.Table<RecursiveEmailTemplate> RecursiveEmailTemplates
	{
		get
		{
			return this.GetTable<RecursiveEmailTemplate>();
		}
	}
	
	public System.Data.Linq.Table<RecursiveContactGroupSheetMaping> RecursiveContactGroupSheetMapings
	{
		get
		{
			return this.GetTable<RecursiveContactGroupSheetMaping>();
		}
	}
	
	public System.Data.Linq.Table<EmailLog> EmailLogs
	{
		get
		{
			return this.GetTable<EmailLog>();
		}
	}
	
	public System.Data.Linq.Table<SmsLog> SmsLogs
	{
		get
		{
			return this.GetTable<SmsLog>();
		}
	}
	
	public System.Data.Linq.Table<SmsScheduleView> SmsScheduleViews
	{
		get
		{
			return this.GetTable<SmsScheduleView>();
		}
	}
	
	public System.Data.Linq.Table<ContactSync> ContactSyncs
	{
		get
		{
			return this.GetTable<ContactSync>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactGroup")]
public partial class ContactGroup : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public ContactGroup()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactGroupSheetMaping")]
public partial class ContactGroupSheetMaping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _ContactGroupId;
	
	private System.Nullable<int> _SheetId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContactGroupIdChanging(System.Nullable<int> value);
    partial void OnContactGroupIdChanged();
    partial void OnSheetIdChanging(System.Nullable<int> value);
    partial void OnSheetIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public ContactGroupSheetMaping()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactGroupId", DbType="Int")]
	public System.Nullable<int> ContactGroupId
	{
		get
		{
			return this._ContactGroupId;
		}
		set
		{
			if ((this._ContactGroupId != value))
			{
				this.OnContactGroupIdChanging(value);
				this.SendPropertyChanging();
				this._ContactGroupId = value;
				this.SendPropertyChanged("ContactGroupId");
				this.OnContactGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetId", DbType="Int")]
	public System.Nullable<int> SheetId
	{
		get
		{
			return this._SheetId;
		}
		set
		{
			if ((this._SheetId != value))
			{
				this.OnSheetIdChanging(value);
				this.SendPropertyChanging();
				this._SheetId = value;
				this.SendPropertyChanged("SheetId");
				this.OnSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailSchedule")]
public partial class EmailSchedule : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _EmailTemplateId;
	
	private System.Nullable<System.DateTime> _SendingDate;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailTemplateIdChanging(System.Nullable<int> value);
    partial void OnEmailTemplateIdChanged();
    partial void OnSendingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendingDateChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public EmailSchedule()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplateId", DbType="Int")]
	public System.Nullable<int> EmailTemplateId
	{
		get
		{
			return this._EmailTemplateId;
		}
		set
		{
			if ((this._EmailTemplateId != value))
			{
				this.OnEmailTemplateIdChanging(value);
				this.SendPropertyChanging();
				this._EmailTemplateId = value;
				this.SendPropertyChanged("EmailTemplateId");
				this.OnEmailTemplateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendingDate
	{
		get
		{
			return this._SendingDate;
		}
		set
		{
			if ((this._SendingDate != value))
			{
				this.OnSendingDateChanging(value);
				this.SendPropertyChanging();
				this._SendingDate = value;
				this.SendPropertyChanged("SendingDate");
				this.OnSendingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailTemplate")]
public partial class EmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Subject;
	
	private string _Name;
	
	private string _EmailText;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _SheetId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailTextChanging(string value);
    partial void OnEmailTextChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnSheetIdChanging(System.Nullable<int> value);
    partial void OnSheetIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public EmailTemplate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(1000)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailText", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string EmailText
	{
		get
		{
			return this._EmailText;
		}
		set
		{
			if ((this._EmailText != value))
			{
				this.OnEmailTextChanging(value);
				this.SendPropertyChanging();
				this._EmailText = value;
				this.SendPropertyChanged("EmailText");
				this.OnEmailTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetId", DbType="Int")]
	public System.Nullable<int> SheetId
	{
		get
		{
			return this._SheetId;
		}
		set
		{
			if ((this._SheetId != value))
			{
				this.OnSheetIdChanging(value);
				this.SendPropertyChanging();
				this._SheetId = value;
				this.SendPropertyChanged("SheetId");
				this.OnSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Owner")]
public partial class Owner : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Email;
	
	private string _Password;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public Owner()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecursiveSheet")]
public partial class RecursiveSheet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public RecursiveSheet()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecursiveSmsTemplate")]
public partial class RecursiveSmsTemplate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _MessageText;
	
	private System.Nullable<int> _RecursiveSheetId;
	
	private System.Nullable<int> _DaysAfter;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnRecursiveSheetIdChanging(System.Nullable<int> value);
    partial void OnRecursiveSheetIdChanged();
    partial void OnDaysAfterChanging(System.Nullable<int> value);
    partial void OnDaysAfterChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public RecursiveSmsTemplate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(500)")]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this.OnMessageTextChanging(value);
				this.SendPropertyChanging();
				this._MessageText = value;
				this.SendPropertyChanged("MessageText");
				this.OnMessageTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursiveSheetId", DbType="Int")]
	public System.Nullable<int> RecursiveSheetId
	{
		get
		{
			return this._RecursiveSheetId;
		}
		set
		{
			if ((this._RecursiveSheetId != value))
			{
				this.OnRecursiveSheetIdChanging(value);
				this.SendPropertyChanging();
				this._RecursiveSheetId = value;
				this.SendPropertyChanged("RecursiveSheetId");
				this.OnRecursiveSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysAfter", DbType="Int")]
	public System.Nullable<int> DaysAfter
	{
		get
		{
			return this._DaysAfter;
		}
		set
		{
			if ((this._DaysAfter != value))
			{
				this.OnDaysAfterChanging(value);
				this.SendPropertyChanging();
				this._DaysAfter = value;
				this.SendPropertyChanged("DaysAfter");
				this.OnDaysAfterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sheet")]
public partial class Sheet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public Sheet()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsConnections")]
public partial class SmsConnection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Url;
	
	private System.Nullable<int> _Proirity;
	
	private System.Nullable<int> _DayLimit;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnProirityChanging(System.Nullable<int> value);
    partial void OnProirityChanged();
    partial void OnDayLimitChanging(System.Nullable<int> value);
    partial void OnDayLimitChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public SmsConnection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(500)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proirity", DbType="Int")]
	public System.Nullable<int> Proirity
	{
		get
		{
			return this._Proirity;
		}
		set
		{
			if ((this._Proirity != value))
			{
				this.OnProirityChanging(value);
				this.SendPropertyChanging();
				this._Proirity = value;
				this.SendPropertyChanged("Proirity");
				this.OnProirityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayLimit", DbType="Int")]
	public System.Nullable<int> DayLimit
	{
		get
		{
			return this._DayLimit;
		}
		set
		{
			if ((this._DayLimit != value))
			{
				this.OnDayLimitChanging(value);
				this.SendPropertyChanging();
				this._DayLimit = value;
				this.SendPropertyChanged("DayLimit");
				this.OnDayLimitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmtpConnections")]
public partial class SmtpConnection : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _UserName;
	
	private string _EmailId;
	
	private string _Password;
	
	private string _Port;
	
	private string _Url;
	
	private System.Nullable<bool> _UseSsl;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<int> _Priority;
	
	private System.Nullable<int> _DailyLimit;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPortChanging(string value);
    partial void OnPortChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUseSslChanging(System.Nullable<bool> value);
    partial void OnUseSslChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnDailyLimitChanging(System.Nullable<int> value);
    partial void OnDailyLimitChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public SmtpConnection()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(200)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(200)")]
	public string EmailId
	{
		get
		{
			return this._EmailId;
		}
		set
		{
			if ((this._EmailId != value))
			{
				this.OnEmailIdChanging(value);
				this.SendPropertyChanging();
				this._EmailId = value;
				this.SendPropertyChanged("EmailId");
				this.OnEmailIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="VarChar(10)")]
	public string Port
	{
		get
		{
			return this._Port;
		}
		set
		{
			if ((this._Port != value))
			{
				this.OnPortChanging(value);
				this.SendPropertyChanging();
				this._Port = value;
				this.SendPropertyChanged("Port");
				this.OnPortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(200)")]
	public string Url
	{
		get
		{
			return this._Url;
		}
		set
		{
			if ((this._Url != value))
			{
				this.OnUrlChanging(value);
				this.SendPropertyChanging();
				this._Url = value;
				this.SendPropertyChanged("Url");
				this.OnUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseSsl", DbType="Bit")]
	public System.Nullable<bool> UseSsl
	{
		get
		{
			return this._UseSsl;
		}
		set
		{
			if ((this._UseSsl != value))
			{
				this.OnUseSslChanging(value);
				this.SendPropertyChanging();
				this._UseSsl = value;
				this.SendPropertyChanged("UseSsl");
				this.OnUseSslChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
	public System.Nullable<int> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyLimit", DbType="Int")]
	public System.Nullable<int> DailyLimit
	{
		get
		{
			return this._DailyLimit;
		}
		set
		{
			if ((this._DailyLimit != value))
			{
				this.OnDailyLimitChanging(value);
				this.SendPropertyChanging();
				this._DailyLimit = value;
				this.SendPropertyChanged("DailyLimit");
				this.OnDailyLimitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _EmailId;
	
	private string _MobileNo;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private System.Nullable<int> _ContactGroupId;
	
	private System.Nullable<int> _OwnerId;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnMobileNoChanging(string value);
    partial void OnMobileNoChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnContactGroupIdChanging(System.Nullable<int> value);
    partial void OnContactGroupIdChanged();
    partial void OnOwnerIdChanging(System.Nullable<int> value);
    partial void OnOwnerIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public Contact()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(200)")]
	public string EmailId
	{
		get
		{
			return this._EmailId;
		}
		set
		{
			if ((this._EmailId != value))
			{
				this.OnEmailIdChanging(value);
				this.SendPropertyChanging();
				this._EmailId = value;
				this.SendPropertyChanged("EmailId");
				this.OnEmailIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="VarChar(10)")]
	public string MobileNo
	{
		get
		{
			return this._MobileNo;
		}
		set
		{
			if ((this._MobileNo != value))
			{
				this.OnMobileNoChanging(value);
				this.SendPropertyChanging();
				this._MobileNo = value;
				this.SendPropertyChanged("MobileNo");
				this.OnMobileNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactGroupId", DbType="Int")]
	public System.Nullable<int> ContactGroupId
	{
		get
		{
			return this._ContactGroupId;
		}
		set
		{
			if ((this._ContactGroupId != value))
			{
				this.OnContactGroupIdChanging(value);
				this.SendPropertyChanging();
				this._ContactGroupId = value;
				this.SendPropertyChanged("ContactGroupId");
				this.OnContactGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="Int")]
	public System.Nullable<int> OwnerId
	{
		get
		{
			return this._OwnerId;
		}
		set
		{
			if ((this._OwnerId != value))
			{
				this.OnOwnerIdChanging(value);
				this.SendPropertyChanging();
				this._OwnerId = value;
				this.SendPropertyChanged("OwnerId");
				this.OnOwnerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsTemplate")]
public partial class SmsTemplate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _MessageText;
	
	private System.Nullable<int> _SheetId;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<System.DateTime> _SendingDate;
	
	private System.Nullable<int> _NoOfTimes;
	
	private System.Nullable<int> _RepeatAfter;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnSheetIdChanging(System.Nullable<int> value);
    partial void OnSheetIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnSendingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendingDateChanged();
    partial void OnNoOfTimesChanging(System.Nullable<int> value);
    partial void OnNoOfTimesChanged();
    partial void OnRepeatAfterChanging(System.Nullable<int> value);
    partial void OnRepeatAfterChanged();
    #endregion
	
	public SmsTemplate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(200)")]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this.OnMessageTextChanging(value);
				this.SendPropertyChanging();
				this._MessageText = value;
				this.SendPropertyChanged("MessageText");
				this.OnMessageTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetId", DbType="Int")]
	public System.Nullable<int> SheetId
	{
		get
		{
			return this._SheetId;
		}
		set
		{
			if ((this._SheetId != value))
			{
				this.OnSheetIdChanging(value);
				this.SendPropertyChanging();
				this._SheetId = value;
				this.SendPropertyChanged("SheetId");
				this.OnSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendingDate
	{
		get
		{
			return this._SendingDate;
		}
		set
		{
			if ((this._SendingDate != value))
			{
				this.OnSendingDateChanging(value);
				this.SendPropertyChanging();
				this._SendingDate = value;
				this.SendPropertyChanged("SendingDate");
				this.OnSendingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfTimes", DbType="Int")]
	public System.Nullable<int> NoOfTimes
	{
		get
		{
			return this._NoOfTimes;
		}
		set
		{
			if ((this._NoOfTimes != value))
			{
				this.OnNoOfTimesChanging(value);
				this.SendPropertyChanging();
				this._NoOfTimes = value;
				this.SendPropertyChanged("NoOfTimes");
				this.OnNoOfTimesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepeatAfter", DbType="Int")]
	public System.Nullable<int> RepeatAfter
	{
		get
		{
			return this._RepeatAfter;
		}
		set
		{
			if ((this._RepeatAfter != value))
			{
				this.OnRepeatAfterChanging(value);
				this.SendPropertyChanging();
				this._RepeatAfter = value;
				this.SendPropertyChanged("RepeatAfter");
				this.OnRepeatAfterChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsSchedule")]
public partial class SmsSchedule : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<int> _SmsTemplateId;
	
	private System.Nullable<int> _IsRecursive;
	
	private System.Nullable<int> _ContactId;
	
	private System.Nullable<bool> _IsSent;
	
	private System.Nullable<System.DateTime> _SentOn;
	
	private System.Nullable<int> _ConnectionId;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<int> _MapingId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSmsTemplateIdChanging(System.Nullable<int> value);
    partial void OnSmsTemplateIdChanged();
    partial void OnIsRecursiveChanging(System.Nullable<int> value);
    partial void OnIsRecursiveChanged();
    partial void OnContactIdChanging(System.Nullable<int> value);
    partial void OnContactIdChanged();
    partial void OnIsSentChanging(System.Nullable<bool> value);
    partial void OnIsSentChanged();
    partial void OnSentOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSentOnChanged();
    partial void OnConnectionIdChanging(System.Nullable<int> value);
    partial void OnConnectionIdChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnMapingIdChanging(System.Nullable<int> value);
    partial void OnMapingIdChanged();
    #endregion
	
	public SmsSchedule()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsTemplateId", DbType="Int")]
	public System.Nullable<int> SmsTemplateId
	{
		get
		{
			return this._SmsTemplateId;
		}
		set
		{
			if ((this._SmsTemplateId != value))
			{
				this.OnSmsTemplateIdChanging(value);
				this.SendPropertyChanging();
				this._SmsTemplateId = value;
				this.SendPropertyChanged("SmsTemplateId");
				this.OnSmsTemplateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecursive", DbType="Int")]
	public System.Nullable<int> IsRecursive
	{
		get
		{
			return this._IsRecursive;
		}
		set
		{
			if ((this._IsRecursive != value))
			{
				this.OnIsRecursiveChanging(value);
				this.SendPropertyChanging();
				this._IsRecursive = value;
				this.SendPropertyChanged("IsRecursive");
				this.OnIsRecursiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="Int")]
	public System.Nullable<int> ContactId
	{
		get
		{
			return this._ContactId;
		}
		set
		{
			if ((this._ContactId != value))
			{
				this.OnContactIdChanging(value);
				this.SendPropertyChanging();
				this._ContactId = value;
				this.SendPropertyChanged("ContactId");
				this.OnContactIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit")]
	public System.Nullable<bool> IsSent
	{
		get
		{
			return this._IsSent;
		}
		set
		{
			if ((this._IsSent != value))
			{
				this.OnIsSentChanging(value);
				this.SendPropertyChanging();
				this._IsSent = value;
				this.SendPropertyChanged("IsSent");
				this.OnIsSentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> SentOn
	{
		get
		{
			return this._SentOn;
		}
		set
		{
			if ((this._SentOn != value))
			{
				this.OnSentOnChanging(value);
				this.SendPropertyChanging();
				this._SentOn = value;
				this.SendPropertyChanged("SentOn");
				this.OnSentOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionId", DbType="Int")]
	public System.Nullable<int> ConnectionId
	{
		get
		{
			return this._ConnectionId;
		}
		set
		{
			if ((this._ConnectionId != value))
			{
				this.OnConnectionIdChanging(value);
				this.SendPropertyChanging();
				this._ConnectionId = value;
				this.SendPropertyChanged("ConnectionId");
				this.OnConnectionIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapingId", DbType="Int")]
	public System.Nullable<int> MapingId
	{
		get
		{
			return this._MapingId;
		}
		set
		{
			if ((this._MapingId != value))
			{
				this.OnMapingIdChanging(value);
				this.SendPropertyChanging();
				this._MapingId = value;
				this.SendPropertyChanged("MapingId");
				this.OnMapingIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailSchedule")]
public partial class EmailSchedule1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _EmailTemplateId;
	
	private System.Nullable<System.DateTime> _SendingDate;
	
	private System.Nullable<bool> _IsDelete;
	
	private System.Nullable<int> _GroupId;
	
	private System.Nullable<bool> _IsSent;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailTemplateIdChanging(System.Nullable<int> value);
    partial void OnEmailTemplateIdChanged();
    partial void OnSendingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendingDateChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnIsSentChanging(System.Nullable<bool> value);
    partial void OnIsSentChanged();
    #endregion
	
	public EmailSchedule1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplateId", DbType="Int")]
	public System.Nullable<int> EmailTemplateId
	{
		get
		{
			return this._EmailTemplateId;
		}
		set
		{
			if ((this._EmailTemplateId != value))
			{
				this.OnEmailTemplateIdChanging(value);
				this.SendPropertyChanging();
				this._EmailTemplateId = value;
				this.SendPropertyChanged("EmailTemplateId");
				this.OnEmailTemplateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendingDate
	{
		get
		{
			return this._SendingDate;
		}
		set
		{
			if ((this._SendingDate != value))
			{
				this.OnSendingDateChanging(value);
				this.SendPropertyChanging();
				this._SendingDate = value;
				this.SendPropertyChanged("SendingDate");
				this.OnSendingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
	public System.Nullable<int> GroupId
	{
		get
		{
			return this._GroupId;
		}
		set
		{
			if ((this._GroupId != value))
			{
				this.OnGroupIdChanging(value);
				this.SendPropertyChanging();
				this._GroupId = value;
				this.SendPropertyChanged("GroupId");
				this.OnGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSent", DbType="Bit")]
	public System.Nullable<bool> IsSent
	{
		get
		{
			return this._IsSent;
		}
		set
		{
			if ((this._IsSent != value))
			{
				this.OnIsSentChanging(value);
				this.SendPropertyChanging();
				this._IsSent = value;
				this.SendPropertyChanged("IsSent");
				this.OnIsSentChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecursiveEmailTemplate")]
public partial class RecursiveEmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _EmailTemplateId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<int> _RecursiveSheetId;
	
	private System.Nullable<int> _DaysAfter;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmailTemplateIdChanging(System.Nullable<int> value);
    partial void OnEmailTemplateIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnRecursiveSheetIdChanging(System.Nullable<int> value);
    partial void OnRecursiveSheetIdChanged();
    partial void OnDaysAfterChanging(System.Nullable<int> value);
    partial void OnDaysAfterChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public RecursiveEmailTemplate()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplateId", DbType="Int")]
	public System.Nullable<int> EmailTemplateId
	{
		get
		{
			return this._EmailTemplateId;
		}
		set
		{
			if ((this._EmailTemplateId != value))
			{
				this.OnEmailTemplateIdChanging(value);
				this.SendPropertyChanging();
				this._EmailTemplateId = value;
				this.SendPropertyChanged("EmailTemplateId");
				this.OnEmailTemplateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursiveSheetId", DbType="Int")]
	public System.Nullable<int> RecursiveSheetId
	{
		get
		{
			return this._RecursiveSheetId;
		}
		set
		{
			if ((this._RecursiveSheetId != value))
			{
				this.OnRecursiveSheetIdChanging(value);
				this.SendPropertyChanging();
				this._RecursiveSheetId = value;
				this.SendPropertyChanged("RecursiveSheetId");
				this.OnRecursiveSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysAfter", DbType="Int")]
	public System.Nullable<int> DaysAfter
	{
		get
		{
			return this._DaysAfter;
		}
		set
		{
			if ((this._DaysAfter != value))
			{
				this.OnDaysAfterChanging(value);
				this.SendPropertyChanging();
				this._DaysAfter = value;
				this.SendPropertyChanged("DaysAfter");
				this.OnDaysAfterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecursiveContactGroupSheetMaping")]
public partial class RecursiveContactGroupSheetMaping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private System.Nullable<int> _ContactGroupId;
	
	private System.Nullable<int> _RecursiveSheetId;
	
	private System.Nullable<System.DateTime> _CreatedOn;
	
	private System.Nullable<bool> _IsDelete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnContactGroupIdChanging(System.Nullable<int> value);
    partial void OnContactGroupIdChanged();
    partial void OnRecursiveSheetIdChanging(System.Nullable<int> value);
    partial void OnRecursiveSheetIdChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    #endregion
	
	public RecursiveContactGroupSheetMaping()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactGroupId", DbType="Int")]
	public System.Nullable<int> ContactGroupId
	{
		get
		{
			return this._ContactGroupId;
		}
		set
		{
			if ((this._ContactGroupId != value))
			{
				this.OnContactGroupIdChanging(value);
				this.SendPropertyChanging();
				this._ContactGroupId = value;
				this.SendPropertyChanged("ContactGroupId");
				this.OnContactGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursiveSheetId", DbType="Int")]
	public System.Nullable<int> RecursiveSheetId
	{
		get
		{
			return this._RecursiveSheetId;
		}
		set
		{
			if ((this._RecursiveSheetId != value))
			{
				this.OnRecursiveSheetIdChanging(value);
				this.SendPropertyChanging();
				this._RecursiveSheetId = value;
				this.SendPropertyChanged("RecursiveSheetId");
				this.OnRecursiveSheetIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedOn
	{
		get
		{
			return this._CreatedOn;
		}
		set
		{
			if ((this._CreatedOn != value))
			{
				this.OnCreatedOnChanging(value);
				this.SendPropertyChanging();
				this._CreatedOn = value;
				this.SendPropertyChanged("CreatedOn");
				this.OnCreatedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailLog")]
public partial class EmailLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _ContactId;
	
	private System.Nullable<long> _EmailId;
	
	private System.Nullable<System.DateTime> _SendingDate;
	
	private System.Nullable<System.DateTime> _SentOn;
	
	private System.Nullable<int> _ConnectionId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnContactIdChanging(System.Nullable<long> value);
    partial void OnContactIdChanged();
    partial void OnEmailIdChanging(System.Nullable<long> value);
    partial void OnEmailIdChanged();
    partial void OnSendingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendingDateChanged();
    partial void OnSentOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSentOnChanged();
    partial void OnConnectionIdChanging(System.Nullable<int> value);
    partial void OnConnectionIdChanged();
    #endregion
	
	public EmailLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="BigInt")]
	public System.Nullable<long> ContactId
	{
		get
		{
			return this._ContactId;
		}
		set
		{
			if ((this._ContactId != value))
			{
				this.OnContactIdChanging(value);
				this.SendPropertyChanging();
				this._ContactId = value;
				this.SendPropertyChanged("ContactId");
				this.OnContactIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="BigInt")]
	public System.Nullable<long> EmailId
	{
		get
		{
			return this._EmailId;
		}
		set
		{
			if ((this._EmailId != value))
			{
				this.OnEmailIdChanging(value);
				this.SendPropertyChanging();
				this._EmailId = value;
				this.SendPropertyChanged("EmailId");
				this.OnEmailIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendingDate
	{
		get
		{
			return this._SendingDate;
		}
		set
		{
			if ((this._SendingDate != value))
			{
				this.OnSendingDateChanging(value);
				this.SendPropertyChanging();
				this._SendingDate = value;
				this.SendPropertyChanged("SendingDate");
				this.OnSendingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> SentOn
	{
		get
		{
			return this._SentOn;
		}
		set
		{
			if ((this._SentOn != value))
			{
				this.OnSentOnChanging(value);
				this.SendPropertyChanging();
				this._SentOn = value;
				this.SendPropertyChanged("SentOn");
				this.OnSentOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionId", DbType="Int")]
	public System.Nullable<int> ConnectionId
	{
		get
		{
			return this._ConnectionId;
		}
		set
		{
			if ((this._ConnectionId != value))
			{
				this.OnConnectionIdChanging(value);
				this.SendPropertyChanging();
				this._ConnectionId = value;
				this.SendPropertyChanged("ConnectionId");
				this.OnConnectionIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsLog")]
public partial class SmsLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _ContactId;
	
	private string _SmsText;
	
	private System.Nullable<bool> _IsRecursive;
	
	private System.Nullable<System.DateTime> _SendingDate;
	
	private System.Nullable<System.DateTime> _SentOn;
	
	private System.Nullable<int> _ConnectionId;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnContactIdChanging(System.Nullable<long> value);
    partial void OnContactIdChanged();
    partial void OnSmsTextChanging(string value);
    partial void OnSmsTextChanged();
    partial void OnIsRecursiveChanging(System.Nullable<bool> value);
    partial void OnIsRecursiveChanged();
    partial void OnSendingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendingDateChanged();
    partial void OnSentOnChanging(System.Nullable<System.DateTime> value);
    partial void OnSentOnChanged();
    partial void OnConnectionIdChanging(System.Nullable<int> value);
    partial void OnConnectionIdChanged();
    #endregion
	
	public SmsLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactId", DbType="BigInt")]
	public System.Nullable<long> ContactId
	{
		get
		{
			return this._ContactId;
		}
		set
		{
			if ((this._ContactId != value))
			{
				this.OnContactIdChanging(value);
				this.SendPropertyChanging();
				this._ContactId = value;
				this.SendPropertyChanged("ContactId");
				this.OnContactIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmsText", DbType="VarChar(500)")]
	public string SmsText
	{
		get
		{
			return this._SmsText;
		}
		set
		{
			if ((this._SmsText != value))
			{
				this.OnSmsTextChanging(value);
				this.SendPropertyChanging();
				this._SmsText = value;
				this.SendPropertyChanged("SmsText");
				this.OnSmsTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecursive", DbType="Bit")]
	public System.Nullable<bool> IsRecursive
	{
		get
		{
			return this._IsRecursive;
		}
		set
		{
			if ((this._IsRecursive != value))
			{
				this.OnIsRecursiveChanging(value);
				this.SendPropertyChanging();
				this._IsRecursive = value;
				this.SendPropertyChanged("IsRecursive");
				this.OnIsRecursiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendingDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendingDate
	{
		get
		{
			return this._SendingDate;
		}
		set
		{
			if ((this._SendingDate != value))
			{
				this.OnSendingDateChanging(value);
				this.SendPropertyChanging();
				this._SendingDate = value;
				this.SendPropertyChanged("SendingDate");
				this.OnSendingDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> SentOn
	{
		get
		{
			return this._SentOn;
		}
		set
		{
			if ((this._SentOn != value))
			{
				this.OnSentOnChanging(value);
				this.SendPropertyChanging();
				this._SentOn = value;
				this.SendPropertyChanged("SentOn");
				this.OnSentOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionId", DbType="Int")]
	public System.Nullable<int> ConnectionId
	{
		get
		{
			return this._ConnectionId;
		}
		set
		{
			if ((this._ConnectionId != value))
			{
				this.OnConnectionIdChanging(value);
				this.SendPropertyChanging();
				this._ConnectionId = value;
				this.SendPropertyChanged("ConnectionId");
				this.OnConnectionIdChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SmsScheduleView")]
public partial class SmsScheduleView
{
	
	private long _Id;
	
	private System.Nullable<System.DateTime> _SentOn;
	
	private string _MessageText;
	
	private System.Nullable<int> _SheetId;
	
	private int _Expr1;
	
	private string _Name;
	
	private System.Nullable<bool> _IsDelete;
	
	public SmsScheduleView()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this._Id = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> SentOn
	{
		get
		{
			return this._SentOn;
		}
		set
		{
			if ((this._SentOn != value))
			{
				this._SentOn = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="VarChar(200)")]
	public string MessageText
	{
		get
		{
			return this._MessageText;
		}
		set
		{
			if ((this._MessageText != value))
			{
				this._MessageText = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetId", DbType="Int")]
	public System.Nullable<int> SheetId
	{
		get
		{
			return this._SheetId;
		}
		set
		{
			if ((this._SheetId != value))
			{
				this._SheetId = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="Int NOT NULL")]
	public int Expr1
	{
		get
		{
			return this._Expr1;
		}
		set
		{
			if ((this._Expr1 != value))
			{
				this._Expr1 = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this._IsDelete = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactSync")]
public partial class ContactSync : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<int> _GroupId;
	
	private string _UserName;
	
	private string _UserPassword;
	
	private string _SheetUrl;
	
	private System.Nullable<int> _LastReadRow;
	
	private System.Nullable<System.DateTime> _ModifiedOn;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnSheetUrlChanging(string value);
    partial void OnSheetUrlChanged();
    partial void OnLastReadRowChanging(System.Nullable<int> value);
    partial void OnLastReadRowChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public ContactSync()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
	public System.Nullable<int> GroupId
	{
		get
		{
			return this._GroupId;
		}
		set
		{
			if ((this._GroupId != value))
			{
				this.OnGroupIdChanging(value);
				this.SendPropertyChanging();
				this._GroupId = value;
				this.SendPropertyChanged("GroupId");
				this.OnGroupIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50)")]
	public string UserPassword
	{
		get
		{
			return this._UserPassword;
		}
		set
		{
			if ((this._UserPassword != value))
			{
				this.OnUserPasswordChanging(value);
				this.SendPropertyChanging();
				this._UserPassword = value;
				this.SendPropertyChanged("UserPassword");
				this.OnUserPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SheetUrl", DbType="VarChar(2000)")]
	public string SheetUrl
	{
		get
		{
			return this._SheetUrl;
		}
		set
		{
			if ((this._SheetUrl != value))
			{
				this.OnSheetUrlChanging(value);
				this.SendPropertyChanging();
				this._SheetUrl = value;
				this.SendPropertyChanged("SheetUrl");
				this.OnSheetUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReadRow", DbType="Int")]
	public System.Nullable<int> LastReadRow
	{
		get
		{
			return this._LastReadRow;
		}
		set
		{
			if ((this._LastReadRow != value))
			{
				this.OnLastReadRowChanging(value);
				this.SendPropertyChanging();
				this._LastReadRow = value;
				this.SendPropertyChanged("LastReadRow");
				this.OnLastReadRowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
	public System.Nullable<System.DateTime> ModifiedOn
	{
		get
		{
			return this._ModifiedOn;
		}
		set
		{
			if ((this._ModifiedOn != value))
			{
				this.OnModifiedOnChanging(value);
				this.SendPropertyChanging();
				this._ModifiedOn = value;
				this.SendPropertyChanged("ModifiedOn");
				this.OnModifiedOnChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
